#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç GPT-4 Vision API
"""

import base64
import openai
from dotenv import load_dotenv
import fitz  # PyMuPDF

def test_simple_vision():
    """–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç Vision API."""
    
    load_dotenv()
    client = openai.OpenAI()
    
    print("üîç –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç GPT-4 Vision...")
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º PDF
    pdf_path = "/home/vorontsovie/programming/math_textbooks/Copy (1) 1_klass_Arifmetika(1959)(Polyak_Pchelko).pdf"
    pdf_doc = fitz.open(pdf_path)
    
    # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –ø–µ—Ä–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
    page = pdf_doc[0]
    pix = page.get_pixmap(matrix=fitz.Matrix(1.5, 1.5))  # –ú–µ–Ω—å—à–µ–µ —É–≤–µ–ª–∏—á–µ–Ω–∏–µ
    img_data = pix.tobytes("png")
    
    # –ö–æ–¥–∏—Ä—É–µ–º –≤ base64
    b64_image = base64.b64encode(img_data).decode('utf-8')
    
    print(f"üìÑ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞: {len(img_data)} –±–∞–π—Ç")
    
    # –û—á–µ–Ω—å –ø—Ä–æ—Å—Ç–æ–π –ø—Ä–æ–º–ø—Ç
    simple_prompts = [
        "–ß—Ç–æ —Ç—ã –≤–∏–¥–∏—à—å –Ω–∞ —ç—Ç–æ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏?",
        "–û–ø–∏—à–∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —ç—Ç–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã.",
        "–≠—Ç–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∏–∑ —É—á–µ–±–Ω–∏–∫–∞. –ß—Ç–æ –Ω–∞ –Ω–µ–π –Ω–∞–ø–∏—Å–∞–Ω–æ?",
        "–ù–∞–π–¥–∏ –ª—é–±–æ–π —Ç–µ–∫—Å—Ç –Ω–∞ —ç—Ç–æ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏."
    ]
    
    for i, prompt in enumerate(simple_prompts, 1):
        try:
            print(f"\nüß™ –¢–µ—Å—Ç {i}: {prompt}")
            
            response = client.chat.completions.create(
                model="gpt-4o",
                messages=[
                    {
                        "role": "user", 
                        "content": [
                            {"type": "text", "text": prompt},
                            {"type": "image_url", "image_url": {"url": f"data:image/png;base64,{b64_image}"}}
                        ]
                    }
                ],
                max_tokens=300,
                temperature=0.0
            )
            
            content = response.choices[0].message.content
            print(f"‚úÖ –û—Ç–≤–µ—Ç: {content[:100]}...")
            
            if "–Ω–µ –º–æ–≥—É –ø–æ–º–æ—á—å" in content.lower() or "–∏–∑–≤–∏–Ω–∏—Ç–µ" in content.lower():
                print("‚ùå –ú–æ–¥–µ–ª—å –æ—Ç–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å")
            else:
                print("‚úÖ –£—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç!")
                print(f"üìù –ü–æ–ª–Ω—ã–π –æ—Ç–≤–µ—Ç: {content}")
                break
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    pdf_doc.close()

if __name__ == "__main__":
    test_simple_vision() 